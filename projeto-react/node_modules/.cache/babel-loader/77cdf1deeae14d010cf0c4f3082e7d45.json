{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\delci\\\\Desktop\\\\Projeto Recode\\\\projeto-react\\\\src\\\\components\\\\actions\\\\update\\\\Article.js\";\nimport React from 'react';\nimport { Jumbotron, Container } from 'reactstrap';\nimport { Card, CardText, CardTitle, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Col, Row } from 'reactstrap';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst Article = props => {\n  let [codigon, setCodigon] = useState(\"\"); //Código do update name\n\n  let [codigod, setCodigod] = useState(\"\"); //Código do update description\n\n  let [codigop, setCodigop] = useState(\"\"); //Código do update price\n\n  let [codigoqt, setCodigoqt] = useState(\"\"); //Código do update quantity\n\n  let [nome, setNome] = useState(\"\");\n  let [descricao, setDescricao] = useState(\"\");\n  let [valor, setValor] = useState(\"\");\n  let [quantidade, setQuantidade] = useState(\"\");\n\n  async function name() {\n    //Atualizar o Nome\n    await axios.post(`http://localhost:3002/updatenome`, {\n      search: codigon,\n      nome: nome\n    }).then(body => {\n      setCodigon(codigon);\n      setNome(nome);\n\n      if (codigon === \"\" && nome === \"\") {\n        alert(\"Preencha todos os campos!\");\n      } else if (codigon === \"\") {\n        alert(\"Insira o código de um produto!\");\n      } else if (nome === \"\") {\n        alert(\"Insira o novo nome do produto!\");\n      } else if (body.data.found === false) {\n        alert(\"Código de produto não cadastrado! Insira um código válido!\");\n      } else {\n        alert(\"Nome atualizado com sucesso!\");\n      }\n    }).catch(err => {\n      alert(\"Erro -> \" + err);\n    });\n  }\n\n  ; // Fim de Atualizar o Nome\n\n  async function description() {\n    //Atualizar a Descrição\n    await axios.post(`http://localhost:3002/updatedescricao`, {\n      search: codigod,\n      descricao: descricao\n    }).then(body => {\n      setCodigod(codigod);\n      setDescricao(descricao);\n\n      if (codigod === \"\" && descricao === \"\") {\n        alert(\"Preencha todos os campos!\");\n      } else if (codigod === \"\") {\n        alert(\"Insira o código de um produto!\");\n      } else if (descricao === \"\") {\n        alert(\"Insira a nova descrição do produto!\");\n      } else if (body.data.found === false) {\n        alert(\"Código de produto não cadastrado! Insira um código válido!\");\n      } else {\n        alert(\"Descrição atualizada com sucesso!\");\n      }\n    }).catch(err => {\n      alert(\"Erro -> \" + err);\n    });\n  }\n\n  ; //Fim de Atualizar a Descrição\n\n  async function price() {\n    //Atualizar o Preço\n    await axios.post(`http://localhost:3002/updatevalor`, {\n      search: codigop,\n      valor: valor\n    }).then(body => {\n      setCodigop(codigop);\n      setValor(valor);\n\n      if (codigop === \"\" && valor === \"\") {\n        alert(\"Preencha todos os campos!\");\n      } else if (codigop === \"\") {\n        alert(\"Insira o código de um produto!\");\n      } else if (valor === \"\") {\n        alert(\"Insira o novo preço do produto!\");\n      } else if (body.data.found === false) {\n        alert(\"Código de produto não cadastrado! Insira um código válido!\");\n      } else {\n        alert(\"Preço atualizado com sucesso!\");\n      }\n    }).catch(err => {\n      alert(\"Erro -> \" + err);\n    });\n  }\n\n  ; //Fim de Atualizar o Preço\n\n  async function quantity() {\n    //Atualizar a Quantidade\n    await axios.post(`http://localhost:3002/updatequantidade`, {\n      search: codigoqt,\n      quantidade: quantidade\n    }).then(body => {\n      setCodigoqt(codigoqt);\n      setQuantidade(quantidade);\n\n      if (codigoqt === \"\" && quantidade === \"\") {\n        alert(\"Preencha todos os campos!\");\n      } else if (codigoqt === \"\") {\n        alert(\"Insira o código de um produto!\");\n      } else if (quantidade === \"\") {\n        alert(\"Insira a quantidade a ser adicionada!\");\n      } else if (body.data.found === false) {\n        alert(\"Código de produto não cadastrado! Insira um código válido!\");\n      } else {\n        alert(\"Quantidade atualizada com sucesso!\");\n      }\n    }).catch(err => {\n      alert(\"Erro -> \" + err);\n    });\n  }\n\n  ; //Fim de Atualizar a Quantidade\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"corpo \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"jum bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"options bg-info col-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Novo Nome:\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"C\\xF3digo\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    name: \"code\",\n    id: \"code\",\n    value: codigon,\n    onChange: e => {\n      setCodigon(e.target.value);\n    },\n    placeholder: \"Insira o c\\xF3digo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Nome:\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    value: nome,\n    onChange: e => {\n      setNome(e.target.value);\n    },\n    placeholder: \"Insira o novo nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Atualizar\"))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"options bg-info col-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"Nova Descri\\xE7\\xE3o:\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"C\\xF3digo\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    name: \"code\",\n    id: \"code\",\n    value: codigod,\n    onChange: e => {\n      setCodigod(e.target.value);\n    },\n    placeholder: \"Insira o c\\xF3digo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Descri\\xE7\\xE3o:\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    value: descricao,\n    onChange: e => {\n      setDescricao(e.target.value);\n    },\n    placeholder: \"Insira a nova descri\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Atualizar\"))), /*#__PURE__*/React.createElement(Col, {\n    className: \"baixo\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"options bg-info col-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Novo Pre\\xE7o:\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, \"C\\xF3digo\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    name: \"code\",\n    id: \"code\",\n    value: codigop,\n    onChange: e => {\n      setCodigop(e.target.value);\n    },\n    placeholder: \"Insira o c\\xF3digo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"Pre\\xE7o:\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"number\",\n    name: \"price\",\n    id: \"price\",\n    value: valor,\n    onChange: e => {\n      setValor(e.target.value);\n    },\n    placeholder: \"Insira o novo pre\\xE7o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Atualizar\"))), /*#__PURE__*/React.createElement(Col, {\n    className: \"baixo\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"options bg-info col-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"Nova Quantidade:\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, \"C\\xF3digo\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    name: \"code\",\n    id: \"code\",\n    value: codigoqt,\n    onChange: e => {\n      setCodigoqt(e.target.value);\n    },\n    placeholder: \"Insira o c\\xF3digo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, \"Quantidade:\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"number\",\n    name: \"price\",\n    id: \"price\",\n    value: quantidade,\n    onChange: e => {\n      setQuantidade(e.target.value);\n    },\n    placeholder: \"Qnt. ser\\xE1 somada a do estoque\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"Atualizar\")))))));\n};\n\nexport default Article;","map":{"version":3,"sources":["C:/Users/delci/Desktop/Projeto Recode/projeto-react/src/components/actions/update/Article.js"],"names":["React","Jumbotron","Container","Card","CardText","CardTitle","Button","Form","FormGroup","Label","Input","Col","Row","useState","axios","Article","props","codigon","setCodigon","codigod","setCodigod","codigop","setCodigop","codigoqt","setCodigoqt","nome","setNome","descricao","setDescricao","valor","setValor","quantidade","setQuantidade","name","post","search","then","body","alert","data","found","catch","err","description","price","quantity","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\nimport { Card, CardText, CardTitle, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\n\r\nconst Article = (props) => {\r\n\r\n  let [codigon, setCodigon] = useState(\"\"); //Código do update name\r\n  let [codigod, setCodigod] = useState(\"\");//Código do update description\r\n  let [codigop, setCodigop] = useState(\"\");//Código do update price\r\n  let [codigoqt, setCodigoqt] = useState(\"\");//Código do update quantity\r\n  let [nome, setNome] = useState(\"\");\r\n  let [descricao, setDescricao] = useState(\"\");\r\n  let [valor, setValor] = useState(\"\");\r\n  let [quantidade, setQuantidade] = useState(\"\");\r\n\r\n  async function name() { //Atualizar o Nome\r\n      await axios.post(`http://localhost:3002/updatenome`, {\r\n          search: codigon,\r\n          nome: nome\r\n      })\r\n      .then((body) => {\r\n        setCodigon(codigon);\r\n        setNome (nome);\r\n          if (codigon === \"\" && nome === \"\") {\r\n              alert(\"Preencha todos os campos!\");\r\n          } else if(codigon === \"\"){\r\n              alert(\"Insira o código de um produto!\");\r\n          }else if (nome === \"\") {\r\n              alert(\"Insira o novo nome do produto!\");\r\n          } else if(body.data.found === false){\r\n              alert(\"Código de produto não cadastrado! Insira um código válido!\");\r\n          }\r\n          else {\r\n              alert(\"Nome atualizado com sucesso!\")\r\n          }\r\n        }).catch((err) => {\r\n            alert(\"Erro -> \" + err);\r\n        });\r\n  };// Fim de Atualizar o Nome\r\n\r\n  async function description(){ //Atualizar a Descrição\r\n    await axios.post(`http://localhost:3002/updatedescricao`, {\r\n        search: codigod,\r\n        descricao: descricao\r\n    })\r\n    .then((body) => {\r\n      setCodigod(codigod);\r\n      setDescricao(descricao);\r\n        if (codigod === \"\" && descricao === \"\") {\r\n            alert(\"Preencha todos os campos!\");\r\n        } else if(codigod === \"\"){\r\n            alert(\"Insira o código de um produto!\");\r\n        }else if (descricao === \"\") {\r\n            alert(\"Insira a nova descrição do produto!\");\r\n        } else if(body.data.found === false){\r\n            alert(\"Código de produto não cadastrado! Insira um código válido!\");\r\n        }\r\n        else {\r\n            alert(\"Descrição atualizada com sucesso!\")\r\n        }\r\n      }).catch((err) => {\r\n          alert(\"Erro -> \" + err);\r\n      });\r\n\r\n  }; //Fim de Atualizar a Descrição\r\n\r\n  async function price(){ //Atualizar o Preço\r\n    await axios.post(`http://localhost:3002/updatevalor`, {\r\n        search: codigop,\r\n        valor: valor\r\n    })\r\n    .then((body) => {\r\n      setCodigop(codigop);\r\n      setValor(valor);\r\n        if (codigop === \"\" && valor === \"\") {\r\n            alert(\"Preencha todos os campos!\");\r\n        } else if(codigop === \"\"){\r\n            alert(\"Insira o código de um produto!\");\r\n        }else if (valor === \"\") {\r\n            alert(\"Insira o novo preço do produto!\");\r\n        } else if(body.data.found === false){\r\n            alert(\"Código de produto não cadastrado! Insira um código válido!\");\r\n        }\r\n        else {\r\n            alert(\"Preço atualizado com sucesso!\")\r\n        }\r\n      }).catch((err) => {\r\n          alert(\"Erro -> \" + err);\r\n      });\r\n\r\n  };//Fim de Atualizar o Preço\r\n\r\n  async function quantity(){ //Atualizar a Quantidade\r\n    await axios.post(`http://localhost:3002/updatequantidade`, {\r\n        search: codigoqt,\r\n        quantidade: quantidade\r\n    })\r\n    .then((body) => {\r\n      setCodigoqt(codigoqt);\r\n      setQuantidade(quantidade);\r\n        if (codigoqt === \"\" && quantidade === \"\") {\r\n            alert(\"Preencha todos os campos!\");\r\n        } else if(codigoqt === \"\"){\r\n            alert(\"Insira o código de um produto!\");\r\n        }else if (quantidade === \"\") {\r\n            alert(\"Insira a quantidade a ser adicionada!\");\r\n        } else if(body.data.found === false){\r\n            alert(\"Código de produto não cadastrado! Insira um código válido!\");\r\n        }\r\n        else {\r\n            alert(\"Quantidade atualizada com sucesso!\")\r\n        }\r\n      }).catch((err) => {\r\n          alert(\"Erro -> \" + err);\r\n      });\r\n\r\n  };//Fim de Atualizar a Quantidade\r\n\r\n  return (\r\n    <div className=\"corpo \">\r\n      <Jumbotron fluid className=\"jum bg-dark\">\r\n       <Container>\r\n        <Row>\r\n          <Col sm=\"6\">\r\n            <Card body className=\"options bg-info col-\" >\r\n              <CardTitle>Novo Nome:</CardTitle>\r\n              <CardText>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label for=\"form\">Código</Label>\r\n                    <Input className=\"input\" type=\"text\" name=\"code\" id=\"code\" value={codigon} onChange={(e) => { setCodigon(e.target.value) }}  placeholder=\"Insira o código\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"form\">Nome:</Label>\r\n                    <Input className=\"input\" type=\"text\" name=\"name\" id=\"name\" value={nome} onChange={(e) => { setNome(e.target.value) }}  placeholder=\"Insira o novo nome\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              </CardText>\r\n              <Button className=\"button\" onClick={name}>Atualizar</Button>\r\n            </Card>\r\n          </Col>\r\n          <Col sm=\"6\">\r\n            <Card body className=\"options bg-info col-\" >\r\n              <CardTitle>Nova Descrição:</CardTitle>\r\n              <CardText>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label for=\"form\">Código</Label>\r\n                    <Input className=\"input\" type=\"text\" name=\"code\" id=\"code\" value={codigod} onChange={(e) => { setCodigod(e.target.value) }} placeholder=\"Insira o código\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"form\">Descrição:</Label>\r\n                    <Input className=\"input\" type=\"text\" name=\"name\" id=\"name\" value={descricao} onChange={(e) => { setDescricao(e.target.value) }} placeholder=\"Insira a nova descrição\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              </CardText>\r\n              <Button className=\"button\" onClick={description}>Atualizar</Button>\r\n            </Card>\r\n          </Col>\r\n          <Col className=\"baixo\" sm=\"6\">\r\n            <Card body className=\"options bg-info col-\" >\r\n              <CardTitle>Novo Preço:</CardTitle>\r\n              <CardText>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label for=\"form\">Código</Label>\r\n                    <Input className=\"input\" type=\"text\" name=\"code\" id=\"code\" value={codigop} onChange={(e) => { setCodigop(e.target.value) }} placeholder=\"Insira o código\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"form\">Preço:</Label>\r\n                    <Input className=\"input\" type=\"number\" name=\"price\" id=\"price\" value={valor} onChange={(e) => { setValor(e.target.value) }} placeholder=\"Insira o novo preço\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              </CardText>\r\n              <Button className=\"button\" onClick={price}>Atualizar</Button>\r\n            </Card>\r\n          </Col>\r\n          <Col className=\"baixo\" sm=\"6\">\r\n            <Card body className=\"options bg-info col-\" >\r\n              <CardTitle>Nova Quantidade:</CardTitle>\r\n              <CardText>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label for=\"form\">Código</Label>\r\n                    <Input className=\"input\" type=\"text\" name=\"code\" id=\"code\" value={codigoqt} onChange={(e) => { setCodigoqt(e.target.value) }} placeholder=\"Insira o código\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"form\">Quantidade:</Label>\r\n                    <Input className=\"input\" type=\"number\" name=\"price\" id=\"price\" value={quantidade} onChange={(e) => { setQuantidade(e.target.value) }} placeholder=\"Qnt. será somada a do estoque\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              </CardText>\r\n              <Button className=\"button\" onClick={quantity}>Atualizar</Button>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n       </Container>\r\n\r\n\r\n\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n"]},"metadata":{},"sourceType":"module"}