{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\delci\\\\Desktop\\\\Projeto Recode\\\\projeto-react\\\\src\\\\components\\\\vendas\\\\Article.js\";\nimport React from 'react';\nimport { Jumbotron, Container } from 'reactstrap';\nimport { Card, CardText, CardTitle, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Col, Row } from 'reactstrap';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport './App.css';\n\nconst Article = props => {\n  let [codigo, setCodigo] = useState(\"\");\n  let [quantidade, setQuantidade] = useState(\"\");\n  let [repos, setRepos] = useState([]);\n\n  async function comprar() {\n    await axios.post(`http://localhost:3003/comprar`, {\n      codigo: codigo,\n      quantidade: quantidade\n    }).then(body => {\n      if (quantidade === \"\" || codigo === \"\") {\n        //Validação dos campos de quantidade e código\n        alert(\"Preencha os campos!\");\n      } else if (body.data.authent === \"void\") {\n        //Validação da quantidade requisitada pelo usuário\n        alert(\"Informe uma quantidade.\");\n      } else if (body.data.authent === false) {\n        //Restrição da quantidade na compra de 1 até 10 produtos.\n        alert(\"Só é possível comprar no máximo 10 produtos por vez.\");\n      } else if (body.data.found == false) {\n        //Validação do código requisitado pelo usuário\n        alert(\"Produto não encontrado.\");\n      } else if (body.data.authent === \"empty\") {\n        alert(\"Produto Esgotado.\");\n      } else if (body.data.authent === \"insuficiente\") {\n        alert(\"Quantidade insuficiente no estoque\");\n      } else {\n        setCodigo(body.data.codigo);\n        setQuantidade(body.data.quantidade);\n        alert(\"Compra realizada com sucesso!\");\n      }\n    }).catch(err => {\n      console.log(\"Erro: \" + err);\n    });\n  }\n\n  ;\n\n  async function exibir() {\n    await axios.post(`http://localhost:3003/exibir`, {}).then(body => {\n      console.log(body);\n      setRepos(body.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"corpo \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"jum bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"options bg-info col-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Comprar\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"C\\xF3digo\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    name: \"code\",\n    id: \"code\",\n    value: codigo,\n    onChange: e => {\n      setCodigo(e.target.value);\n    },\n    placeholder: \"Insira o c\\xF3digo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Quantidade\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"number\",\n    name: \"quant\",\n    id: \"quant\",\n    value: quantidade,\n    onChange: e => {\n      setQuantidade(e.target.value);\n    },\n    placeholder: \"Insira a quantidade (1-10)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: comprar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Comprar\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: exibir,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Cat\\xE1logo\")))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"options bg-info col-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Produtos\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    clasName: \"Repo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, repos.map(element => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: element.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, element.nome), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, \"Descri\\xE7\\xE3o: \", element.descricao), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"C\\xF3digo: \", element.codigo), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Pre\\xE7o: R$\", element.valor));\n  }))))))))));\n};\n\nexport default Article;","map":{"version":3,"sources":["C:/Users/delci/Desktop/Projeto Recode/projeto-react/src/components/vendas/Article.js"],"names":["React","Jumbotron","Container","Card","CardText","CardTitle","Button","Form","FormGroup","Label","Input","Col","Row","axios","useState","Article","props","codigo","setCodigo","quantidade","setQuantidade","repos","setRepos","comprar","post","then","body","alert","data","authent","found","catch","err","console","log","exibir","e","target","value","map","element","id","nome","descricao","valor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Jumbotron, Container } from 'reactstrap';\nimport { Card, CardText, CardTitle, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Col, Row } from 'reactstrap';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport './App.css';\n\n\nconst Article = (props) => {\n\n  let [codigo, setCodigo] = useState(\"\");\n  let [quantidade, setQuantidade] = useState(\"\");\n  let [repos, setRepos ] = useState ([]);\n\n  async function comprar(){\n\n    await axios.post(`http://localhost:3003/comprar`, {\n      codigo: codigo,\n      quantidade: quantidade\n\n    }).then((body) => {\n\n        if (quantidade === \"\" || codigo === \"\") {//Validação dos campos de quantidade e código\n          alert(\"Preencha os campos!\")\n        }\n        else if (body.data.authent === \"void\") { //Validação da quantidade requisitada pelo usuário\n          alert(\"Informe uma quantidade.\")\n        }\n        else if (body.data.authent === false ) {//Restrição da quantidade na compra de 1 até 10 produtos.\n          alert(\"Só é possível comprar no máximo 10 produtos por vez.\")\n        }\n        else if (body.data.found == false) {//Validação do código requisitado pelo usuário\n          alert(\"Produto não encontrado.\")\n        }else if (body.data.authent === \"empty\") {\n          alert(\"Produto Esgotado.\")\n        }else if (body.data.authent === \"insuficiente\") {\n          alert(\"Quantidade insuficiente no estoque\")\n        }\n        else{\n          setCodigo(body.data.codigo);\n          setQuantidade(body.data.quantidade);\n          alert(\"Compra realizada com sucesso!\");\n        }\n    }).catch((err) => {\n      console.log(\"Erro: \" + err);\n    });\n\n  };\n\n\n  async function exibir(){\n\n    await axios.post(`http://localhost:3003/exibir`, {\n\n    }).then ( (body) => {\n      console.log(body);\n      setRepos(body.data);\n    })\n    .catch ( (err) => {\n      console.log(err);\n    })\n\n  };\n\n  return (\n    <div className=\"corpo \">\n      <Jumbotron fluid className=\"jum bg-dark\">\n        <Container>\n          <Row>\n            <Col sm=\"6\">\n              <Card body className=\"options bg-info col-\" >\n                <CardTitle>Comprar</CardTitle>\n                <CardText>\n                  <Form>\n                    <FormGroup>\n                    <Label for=\"form\">Código</Label>\n                      <Input className=\"input\" type=\"text\" name=\"code\" id=\"code\" value={codigo} onChange={(e) => {setCodigo(e.target.value)}} placeholder=\"Insira o código\" />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"form\">Quantidade</Label>\n                      <Input className=\"input\" type=\"number\" name=\"quant\" id=\"quant\" value={quantidade} onChange={(e) => {setQuantidade(e.target.value)}} placeholder=\"Insira a quantidade (1-10)\" />\n                    </FormGroup>\n                    <FormGroup>\n                    <Button className=\"button\" onClick={comprar}>Comprar</Button>\n                    </FormGroup>\n                    <FormGroup>\n                    <Button className=\"button\" onClick={exibir} >Catálogo</Button>\n                    </FormGroup>\n                  </Form>\n                </CardText>\n\n              </Card>\n\n            </Col>\n            <Col sm=\"6\">\n              <Card body className=\"options bg-info col-\" >\n                <CardTitle>Produtos</CardTitle>\n                <CardText>\n                  <Form>\n                    <div clasName=\"Repo\">\n\n                        {repos.map((element) =>{return (\n                        <p key={element.id}>\n\n                        <h4>{element.nome}</h4>\n                        <li>Descrição: {element.descricao}</li>\n                        <li>Código: {element.codigo}</li>\n                        <li>Preço: R${element.valor}</li>\n                        </p>\n                        )} )}\n\n                    </div>\n\n                  </Form>\n                </CardText>\n              </Card>\n            </Col>\n\n          </Row>\n        </Container>\n\n\n\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}