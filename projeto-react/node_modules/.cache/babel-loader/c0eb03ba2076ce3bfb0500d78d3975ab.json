{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\delci\\\\Desktop\\\\Projeto Recode\\\\projeto-react\\\\src\\\\components\\\\actions\\\\view\\\\Article.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Card, CardText, CardTitle, Button, Form, FormGroup, Label, Input, Jumbotron, Container, Col, Row } from 'reactstrap';\nimport axios from 'axios';\nimport './App.css';\n\nfunction Article() {\n  let [search, setSearch] = useState(\"\");\n  let [nome, setNome] = useState(\"\");\n  let [repos, setRepos] = useState([]);\n\n  async function buscar() {\n    await axios.post(`http://localhost:3002/viewproduto`, {\n      nome: search\n    }).then(body => {\n      console.log(body);\n\n      if (search === \"\") {\n        alert(\"Preencha o campo!\");\n      } else if (body.data.found === false) {\n        alert(\"Produto nÃ£o encontrado!\");\n      } else {\n        setRepos(body.data);\n      }\n\n      setNome(body.data.nome);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"corpo \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"jum bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"options bg-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Buscar produtos pelo Nome\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    name: \"name\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    placeholder: \"Insira o nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: buscar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Pesquisar\"))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"options bg-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, \"Produtos\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    clasName: \"Repo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }\n  }, repos.map(element => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: element.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 31\n      }\n    }, element.nome), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 31\n      }\n    }, \"Descri\\xE7\\xE3o: \", element.descricao), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }\n    }, \"C\\xF3digo: \", element.codigo), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 31\n      }\n    }, \"Pre\\xE7o: R$\", element.valor), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 31\n      }\n    }, \"Estoque: \", element.quantidade));\n  }))))))))));\n}\n\n;\nexport default Article;","map":{"version":3,"sources":["C:/Users/delci/Desktop/Projeto Recode/projeto-react/src/components/actions/view/Article.js"],"names":["React","useState","Card","CardText","CardTitle","Button","Form","FormGroup","Label","Input","Jumbotron","Container","Col","Row","axios","Article","search","setSearch","nome","setNome","repos","setRepos","buscar","post","then","body","console","log","alert","data","found","e","target","value","map","element","id","descricao","codigo","valor","quantidade"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { Card, CardText, CardTitle, Button, Form, FormGroup, Label, Input, Jumbotron, Container, Col, Row } from 'reactstrap';\nimport axios from 'axios';\n\nimport './App.css';\n\n\nfunction Article() {\n  let [search, setSearch] = useState(\"\");\n  let [nome, setNome] = useState(\"\");\n  let [repos, setRepos] = useState([]);\n\n  async function buscar() {\n    await axios.post(`http://localhost:3002/viewproduto`, {\n      nome: search\n    }).then((body) => {\n      console.log(body);\n      if (search === \"\") {\n        alert(\"Preencha o campo!\");\n      }\n      else if (body.data.found === false) {\n        alert(\"Produto nÃ£o encontrado!\");\n      } else {\n        setRepos(body.data);\n      }\n      setNome(body.data.nome);\n\n    });\n  }\n\n  return (\n    <div className=\"corpo \">\n      <Jumbotron fluid className=\"jum bg-dark\">\n        <Container>\n          <Row>\n            <Col sm=\"6\">\n              <Card body className=\"options bg-info\" >\n                <CardTitle>Buscar produtos pelo Nome</CardTitle>\n                <CardText>\n                  <div>\n                    <FormGroup>\n                      <Input className=\"input\" type=\"text\" name=\"name\" value={search} onChange={(e) => (setSearch(e.target.value))} placeholder=\"Insira o nome\" />\n                    </FormGroup>\n                  </div>\n                </CardText>\n                <Button className=\"button\" onClick={buscar}>Pesquisar</Button>\n              </Card>\n            </Col>\n            <Col sm=\"6\">\n                <Card body className=\"options bg-info\" >\n                  <CardTitle>Produtos</CardTitle>\n                  <CardText>\n                    <Form>\n                      <div clasName=\"Repo\">\n                        {repos.map((element) => {\n                          return (\n                            <p key={element.id}>\n\n                              <h4>{element.nome}</h4>\n                              <li>DescriÃ§Ã£o: {element.descricao}</li>\n                              <li>CÃ³digo: {element.codigo}</li>\n                              <li>PreÃ§o: R${element.valor}</li>\n                              <li>Estoque: {element.quantidade}</li>\n                            </p>\n                          )\n                        })}\n                      </div>\n                    </Form>\n                  </CardText>\n                </Card>\n              </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}